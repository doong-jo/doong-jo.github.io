{"version":3,"file":"component---src-pages-posts-long-live-monorepos-mdx-34f220bbfdc62701ec58.js","mappings":"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","sources":["webpack://blog/./src/components/utterances.js","webpack://blog/./src/components/page-layout.js","webpack://blog/./src/pages/posts/long-live-monorepos.mdx","webpack://blog/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import React, { useEffect, useState, createRef, memo } from \"react\";\n\nconst Utterances = () => {\n  const commentsEl = createRef();\n  const [status, setStatus] = useState(\"pending\");\n\n  useEffect(() => {\n    if (!!commentsEl) {\n      return;\n    }\n\n    const scriptEl = document.createElement(\"script\");\n    scriptEl.onload = () => setStatus({ status: \"success\" });\n    scriptEl.onerror = () => setStatus({ status: \"failed\" });\n    scriptEl.async = true;\n    scriptEl.src = \"https://utteranc.es/client.js\";\n    scriptEl.setAttribute(\"repo\", \"doong-jo/blog\");\n    scriptEl.setAttribute(\"issue-term\", \"pathname\");\n    scriptEl.setAttribute(\"theme\", \"preferred-color-scheme\");\n    scriptEl.setAttribute(\"crossorigin\", \"anonymous\");\n    commentsEl.current.appendChild(scriptEl);\n  }, [commentsEl]);\n\n  return (\n    <div className=\"comments-wrapper\">\n      {status === \"failed\" && <p>Error. Please try again.</p>}\n      {status === \"pending\" && <p>Loading script...</p>}\n      <div ref={commentsEl} />\n    </div>\n  );\n};\nexport default memo(Utterances);\n","import * as React from \"react\";\nimport Helmet from \"react-helmet\";\nimport Utterances from \"./utterances\";\n\nimport \"./global.css\";\nimport OctoCat from \"./octo-cat\";\nimport \"./post.css\";\n\n// https://www.gatsbyjs.com/docs/how-to/routing/customizing-components/\n// https://reacttraining.com/blog/gatsby-mdx-blog/\nexport default function Layout({ children, pageContext }) {\n  const { title, description, keywords, url, image, date } =\n    pageContext.frontmatter;\n\n  return (\n    <div id=\"post-body\" className=\"markdown-body dark\">\n      <OctoCat />\n      <Helmet>\n        <title>{title}</title>\n\n        <meta name=\"description\" content={description} />\n        <meta name=\"keywords\" content={keywords} />\n        <meta name=\"author\" content=\"doong-jo\"></meta>\n\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:site_name\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta property=\"og:url\" content={url} />\n\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n\n        <link rel=\"canonical\" href={url} />\n      </Helmet>\n      <time>{date}</time>\n      {children}\n      <Utterances />\n    </div>\n  );\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/sungdong.jo/repos/blog/src/components/page-layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Lerna는 공식적으로 죽었다. 모노레포여 영원하길`}</h1>\n    <blockquote>\n      <p parentName=\"blockquote\">{`원문: `}<a parentName=\"p\" {...{\n          \"href\": \"https://betterprogramming.pub/lerna-is-officially-dead-long-live-monorepos-9853c80a7b0e\"\n        }}>{`https://betterprogramming.pub/lerna-is-officially-dead-long-live-monorepos-9853c80a7b0e`}</a></p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`4가지 도구를 사용하여 JavaScript 모노레포를 효율적으로 관리할 수 있습니다.`}</p>\n    </blockquote>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://miro.medium.com/max/1400/1*HOIXYzC17oKEWc5p4gMIwg.png\",\n        \"alt\": \"image1.png\"\n      }}></img></p>\n    <p>{`모노레포 방식은 모든 종속성을 관리하는 좋은 방법입니다. 그리고 이는 몇 년 동안 뜨거운 주제였습니다. 모노레포는 잘 정의된 관계를 통해 개별 프로젝트를 유지할 수 있는 좋은 방법입니다. 즉각적인 이점 중 하나는 `}<inlineCode parentName=\"p\">{`ESLint`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Prettier`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`TypeScript`}</inlineCode>{` 등과 같은 구성을 서로 다른 프로젝트에서 공유하여 일관성을 보장할 수 있다는 점입니다.`}</p>\n    <p><inlineCode parentName=\"p\">{`npm`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`yarn`}</inlineCode>{` 및 `}<inlineCode parentName=\"p\">{`pnpm`}</inlineCode>{`과 같은 도구는 모노레포를 자체적으로 지원합니다. 그러나 몇가지 필요한 기능을 지원하지 않아 아쉬움이 있었습니다. 이러한 부족함을 `}<inlineCode parentName=\"p\">{`Lerna`}</inlineCode>{`에서는 지원했습니다. `}<inlineCode parentName=\"p\">{`Lerna`}</inlineCode>{`의 목표는 패키지를 빌드, 조정 및 배포할 수 있도록 확장성을 향상시키는 것이었습니다.`}</p>\n    <p>{`Lerna는 최근에 공식적으로 수명이 다했습니다. 비록 메인테이너였던 `}<inlineCode parentName=\"p\">{`@evocateur`}</inlineCode>{`가 그의 번아웃과 함께 프로젝트를 포기하려는 의도를 밝혔지만, 그것은 2020년 4월까지 공식화되지 않았었습니다.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`중요한 참고: 이 프로젝트는 현재 `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/lerna/lerna/issues/2703\"\n        }}>{`활발 유지 관리되지 않습니다`}</a>{`. 모노레포 관리를 위한 대체 도구 채택을 고려하십시오. — Lerna의 Readme.md에 명시된 내용입니다.`}</p>\n    </blockquote>\n    <p>{`이 프로젝트는 매일 `}<inlineCode parentName=\"p\">{`130만`}</inlineCode>{` 건 이상의 다운로드가 지속적으로 발생하고 있지만 다른 곳에 이관되지 않을 것입니다. 왜 그럴까요? 제작자는 그것을 수정하기보다는 다시 만들기를 열망할 것입니다. 최신 툴링의 성능과 경쟁할 수 없었습니다. 비록 많은 사람들이 여전히 `}<inlineCode parentName=\"p\">{`Lerna`}</inlineCode>{`를 사랑하고 즐긴다고 해도, 이제는 나아가야 할 때입니다.`}</p>\n    <p>{`그렇다면 JavaScript/TypeScript 모노레포 에코시스템을 구축할 때 우리가 선택할 수 있는 것은 무엇일까요? 이 글에서는 가장 인기 있는 도구를 알아보려고 합니다.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`업데이트`}</strong>{`: 이 글이 게시된 후 내용이 뒤바뀌었습니다. Lerna의 제작자가 프로젝트를 `}<strong parentName=\"p\">{`Nrwl`}</strong>{` 🚀🚀에게 넘기기로 결정했습니다. 그들의 로드맵은 여전히 공개되어야 할 것입니다. 지난 한 해 동안 Lerna가 비활성화되어 뒤쳐지게되었습니다.`}</p>\n    </blockquote>\n    <h2>{`1. Yarn, Npm, and Pnpm`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://miro.medium.com/max/1400/1*KgmML7r4OsnNdDikiVfiBg.png\",\n        \"alt\": \"image2.png\"\n      }}></img></p>\n    <p>{`앞서 언급했듯이 `}<inlineCode parentName=\"p\">{`npm`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`yarn`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`pnpm`}</inlineCode>{`은 이미 자체적으로 모노레포 지원으로 출하되고 있습니다. 그렇다면 \"Lerna\"나 다른 도구가 정말 필요한 지 자문해 볼 필요가 있습니다. 여러분의 모노레포는 그렇게 복잡합니까?`}</p>\n    <p><inlineCode parentName=\"p\">{`yarn`}</inlineCode>{`은 모노레포 기능 지원에 있어서 선구자였고, `}<inlineCode parentName=\"p\">{`npm`}</inlineCode>{`은 2020년 10월 출시된 버전 7부터 지원하고 있습니다. `}<inlineCode parentName=\"p\">{`npm`}</inlineCode>{`. `}<inlineCode parentName=\"p\">{`yarn`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`pnpm`}</inlineCode>{` 세 가지 패키지 매니저 사이에는 많은 유사점이 있습니다.`}</p>\n    <p><inlineCode parentName=\"p\">{`pnpm`}</inlineCode>{`에서 작업 영역 구성은 `}<inlineCode parentName=\"p\">{`pnpm-workspace.yaml`}</inlineCode>{`에 있고 `}<inlineCode parentName=\"p\">{`yarn`}</inlineCode>{` 및 `}<inlineCode parentName=\"p\">{`npm`}</inlineCode>{`에서는 루트 `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`에 있습니다.`}</p>\n    <p><inlineCode parentName=\"p\">{`npm`}</inlineCode>{`에서 작업영역(workspaces)을 사용한 모노레포 설정 예제입니다.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// /.package.json\n{\n  // ...\n  \"workspaces\": [\"./packages/*\"]\n}\n`}</code></pre>\n    <p>{`테스트와 같은 명령을 실행하려면 npm의 `}<inlineCode parentName=\"p\">{`--workspaces`}</inlineCode>{`와 `}<inlineCode parentName=\"p\">{`pnpm`}</inlineCode>{`의 `}<inlineCode parentName=\"p\">{`-r`}</inlineCode>{` 또는 `}<inlineCode parentName=\"p\">{`recursive`}</inlineCode>{`를 사용할 수 있습니다.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`# 모든 워크스페이스를 새롭게 정리합니다.\npnpm -r exec -- rm -rf node_modules && rm pnpm-lock.yaml\n#  @doppelmutzi 범위의 모든 작업영역에서 모든 테스트를 수행합니다.\npnpm recursive run test --filter @doppelmutzi/\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`yarn`}</inlineCode>{`의 한 가지 특징은 `}<inlineCode parentName=\"p\">{`workspace:`}</inlineCode>{` 참조를 동적으로 대체하여 종속성 프로세스를 단순화할 수 있다는 것입니다. 이는 매우 편리합니다.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"dependencies\": {\n    \"star\": \"workspace:*\",\n    \"caret\": \"workspace:^\",\n    \"tilde\": \"workspace:~\",\n    \"range\": \"workspace:^1.2.3\",\n    \"path\": \"workspace:path/to/baz\"\n  }\n}\n`}</code></pre>\n    <p>{`이 세 가지 중에서 어떤 것이 가장 좋을까요? 비록 `}<inlineCode parentName=\"p\">{`npm`}</inlineCode>{`이 빠르게 따라잡고 있지만 좀 더 성숙한 특징을 가지고 있는 `}<inlineCode parentName=\"p\">{`yarn`}</inlineCode>{`을 뽑을 것 같습니다. `}<inlineCode parentName=\"p\">{`pnpm`}</inlineCode>{`은 디스크를 사용함으로써 얻는 효율성과 같은 다른 이점도 있지만, 이는 `}<inlineCode parentName=\"p\">{`yarn berry`}</inlineCode>{`에서도 지원하고 있습니다.`}</p>\n    <p>{`이 세 가지 중 어떤 것을 언제 사용해야 할까요? 모두 상대적으로 규모가 작은 프로젝트에서 사용하는 것이 좋습니다. 왜냐하면 프로젝트 오케스트레이션 측면에서 이점은 없기 때문입니다. 복잡한 종속성 그래프 또는 릴리스가 필요한 경우 다른 도구를 선택하는 것이 좋습니다.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`(역주) `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.redhat.com/ko/topics/automation/what-is-orchestration\"\n        }}>{`오케스트레이션`}</a></p>\n    </blockquote>\n    <h2>{`2. 러쉬(Rush) 스택`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://miro.medium.com/max/1400/1*D_agf6wVxCgNv4O_Sp6MWQ.png\",\n        \"alt\": \"image3.png\"\n      }}></img></p>\n    <p>{`러쉬는 마이크로소프트가 JavaScript/TypeScript 프로젝트를 위한 모노레포 관리를 해결하기 위해 만든 도구입니다. 내부 관리 도구로써 만들어졌고 발전해왔습니다.`}</p>\n    <p>{`이 도구의 가장 좋은 특징은 무엇일까요?`}</p>\n    <ul>\n      <li parentName=\"ul\">{`자동 로컬 연결(linking)`}</li>\n      <li parentName=\"ul\">{`빠른 빌드`}</li>\n      <li parentName=\"ul\">{`부분 또는 증분 빌드`}</li>\n      <li parentName=\"ul\">{`순환 종속성`}</li>\n      <li parentName=\"ul\">{`대량 발행`}</li>\n    </ul>\n    <p>{`설치 및 시작은 매우 간단합니다. 설치 방법은 다음과 같습니다.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install -g @microsoft/rush\n`}</code></pre>\n    <p>{`이 도구는 응용 프로그램을 가장 잘 구성하는 방법에 대한 상당한 수준의 제어 기능을 제공합니다. 이건 단지 저의 의견이 아니며 빌드 및 릴리스 오케스트레이터로 볼 수 있습니다. 3개의 상위 패키지 매니저들(`}<inlineCode parentName=\"p\">{`yarn`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`pnpm`}</inlineCode>{`, 또는 `}<inlineCode parentName=\"p\">{`npm`}</inlineCode>{`) 가운데 어떤 것이라도 그 위에 구축할 수 있습니다. 이 세 가지 중에서는 `}<inlineCode parentName=\"p\">{`npm`}</inlineCode>{`과 가장 호환성이 좋습니다. 유일한 주의 사항은 꽤 오래된 버전인 4.5.0과 함께 사용할 것을 제안한다는 것입니다.`}</p>\n    <p>{`어떻게 작동할까요? 이 모든 것은 `}<inlineCode parentName=\"p\">{`rush.json`}</inlineCode>{` 파일을 통해 구성됩니다. `}<inlineCode parentName=\"p\">{`pnpm`}</inlineCode>{` 도구를 사용하는 예를 보겠습니다.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// rush.json\n/**\n  * 다음 필드는 패키지 매니저가 어떤 버전으로 설치되어야하는지 나타냅니다.\n  * 러쉬는 여러분의 빌드 과정을 보장하기 위해 패키지 관리자의 로컬 복사본을 설치합니다.\n  * 이 내용은 로컬 환경의 모든 도구로부터 완전히 독립적입니다.\n  *\n  *\n  * \"pnpmVersion\", \"npmVersion\", or \"yarnVersion\" 중 하나를 사용할 때의 명세입니다. 더 자세한 대안들에 대한 내용은 러쉬의 문서를 참고해주세요.\n  */\n\"pnpmVersion\": \"2.15.1\",\n\n// \"npmVersion\": \"4.5.0\",\n// \"yarnVersion\": \"1.9.4\",\n`}</code></pre>\n    <p>{`이 파일에서 프로젝트의 종속성이 어떻게 구성되는지 살펴보겠습니다.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"projects\": [\n    {\n      \"packageName\": \"my-toolchain\",\n      \"projectFolder\": \"tools/my-toolchain\"\n    }\n  ]\n`}</code></pre>\n    <p>{`여전히 다른 툴링과 상당히 일치합니다. 러쉬의 툴링은 프로젝트 `}<inlineCode parentName=\"p\">{`npm`}</inlineCode>{` 종속성을 세부적으로 제어하고자 하는 대규모 조직에 적합합니다.`}</p>\n    <h2>{`3. 터보레포(Turborepo)`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://miro.medium.com/max/1400/1*BZZWr6mmjPV7r57JzFtw_w.png\",\n        \"alt\": \"image4.png\"\n      }}></img></p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`이미지 출처: `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/vercel/turborepo\"\n        }}>{`https://github.com/vercel/turborepo`}</a></p>\n    </blockquote>\n    <p>{`Vercel은 최근 터보레포 회사를 인수하여 똑똑한 모노레포 도구를 선점했습니다. 터보레포는 `}<inlineCode parentName=\"p\">{`Formik`}</inlineCode>{`를 만든 사람이 참여했고 Go 언어를 사용하여 만들어졌습니다. 특히 병렬 실행에서 탁월한 성능을 발휘합니다.`}</p>\n    <p>{`가장 좋은 특징은 무엇일까요?`}</p>\n    <ul>\n      <li parentName=\"ul\">{`컴퓨팅 및 원격 캐싱`}</li>\n      <li parentName=\"ul\">{`병렬 태스크 실행`}</li>\n      <li parentName=\"ul\">{`사용 및 구성이 용이함`}</li>\n      <li parentName=\"ul\">{`종속성 시각화`}</li>\n      <li parentName=\"ul\">{`변경 사항이 지속적으로 통합됨`}</li>\n    </ul>\n    <p>{`시작하기 전에 다음을 실행하여 터미널 설정 마법사를 트리거할 수 있습니다.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// 실행\nnpx create-turbo@latest my-turbo-repo\n`}</code></pre>\n    <p>{`러쉬와 마찬가지로 터보레포도 패키지 관리자를 선택해야 합니다. npm, pnpm 및 yarn 옵션을 사용할 수 있습니다. 이미 기본 작업 영역들(workspace)을 사용하고 있다면 이 도구와 잘 통합되므로 쉽게 전환할 수 있습니다.`}</p>\n    <p><inlineCode parentName=\"p\">{`\"*\"`}</inlineCode>{` 표기법을 사용하여 패키지 종속성을 관리하는 방법에 주목해주세요. 이렇게 하면 앱이 최신 버전으로 유지됩니다.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"dependencies\": {\n  \"next\": \"12.0.8\",\n  \"react\": \"17.0.2\",\n  \"react-dom\": \"17.0.2\",\n  \"ui\": \"*\"\n},\n`}</code></pre>\n    <p>{`우리는 turbo.json을 통해 빌드 파이프라인을 만들 수 있습니다. 프로젝트가 어떻게 만들어지는지 정의하는 곳입니다.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"pipeline\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"],\n      \"outputs\": [\"dist/**\", \".next/**\"]\n    },\n    \"lint\": {\n      \"outputs\": []\n    },\n    \"dev\": {\n      \"cache\": false\n    }\n  }\n}\n`}</code></pre>\n    <p>{`이 도구는 빌딩 프로세스를 심층적으로 구성하고자 하는 독립적인 모노레포를 원하는 경우 유용합니다.`}</p>\n    <p>{`유망하지만 `}<inlineCode parentName=\"p\">{`Nx`}</inlineCode>{`와 같은 성숙한 툴링을 따라잡으려면 아직 갈 길이 멉니다. `}<inlineCode parentName=\"p\">{`Vercel`}</inlineCode>{`과 함께라면 큰 발전을 이룰 것으로 보입니다. 이 도구는 미래를 위한 배팅일 것입니다.`}</p>\n    <h2>{`4. NX`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://miro.medium.com/max/1400/0*ZjdRqOwAUAQEcsNe.png\",\n        \"alt\": \"image5.png\"\n      }}></img></p>\n    <p>{`Nx는 Nrwl 팀에 의해 만들어졌습니다. 몇 년 동안이나 이용 가능했지만 최근에 매우 인기가 많아졌습니다. TypeScript를 사용하여 빌드됩니다만 이것에 속지 마세요. 성능이 정말 뛰어납니다. `}<inlineCode parentName=\"p\">{`C++`}</inlineCode>{`로 작성된 모듈과 코어 `}<inlineCode parentName=\"p\">{`Node.js`}</inlineCode>{`에 의해 많은 계산이 수행됩니다.`}</p>\n    <p>{`이 도구의 철학은 프로젝트가 특정한 구조를 가져야 한다는 것입니다. 그들은 전체 구조를 건조하고, 다용도적이며, 플러그가 가능한 상태로 유지하기 위해 비트 플러그인 생태계를 만들었습니다. Nx는 확장 가능하고, 빠르고, 똑똑한 빌드 시스템입니다.`}</p>\n    <p>{`가장 좋은 특징은 무엇일까요?`}</p>\n    <ul>\n      <li parentName=\"ul\">{`스마트 리빌드. 변경 사항의 영향을 받는 내용만 다시 빌드하고 다시 테스트합니다.`}</li>\n      <li parentName=\"ul\">{`프로젝트 그래프`}</li>\n      <li parentName=\"ul\">{`분산 태스크 실행`}</li>\n      <li parentName=\"ul\">{`컴퓨팅 및 원격 캐싱`}</li>\n      <li parentName=\"ul\">{`개발자 경험`}</li>\n      <li parentName=\"ul\">{`소유권 관리`}</li>\n      <li parentName=\"ul\">{`발전기`}</li>\n      <li parentName=\"ul\">{`플러그인 생태계`}</li>\n      <li parentName=\"ul\">{`CL/V 코드 확장`}</li>\n    </ul>\n    <p>{`마이그레이션은 간단합니다. 먼저 명령을 실행하여 Nx를 추가합니다.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// 실행\nnpx add-nx-to-monorepo\n`}</code></pre>\n    <p>{`위 내용은 무엇을 하는걸까요?`}</p>\n    <ul>\n      <li parentName=\"ul\">{`package.json에 Nx를 추가합니다.`}</li>\n      <li parentName=\"ul\">{`필요한 구성을 모두 포함하는 nx.json을 생성합니다.`}</li>\n      <li parentName=\"ul\">{`무료이며 인증이 필요하지 않은 Nx Cloud를 설정합니다(\"예\"를 선택한 경우).`}</li>\n    </ul>\n    <p>{`다음 단계는 아래와 같습니다.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`플러그인 사용`}</li>\n      <li parentName=\"ul\">{`플러그인에 활용되는 중복 구성 삭제`}</li>\n    </ul>\n    <p>{`Nx는 견고하고 성능이 뛰어납니다. 그것은 `}<inlineCode parentName=\"p\">{`터보레포`}</inlineCode>{`와 `}<inlineCode parentName=\"p\">{`러쉬`}</inlineCode>{`보다 더 성숙합니다. 훌륭한 커뮤니티 지원과 더 많은 리소스들이 있습니다. VSCode 플러그인을 사용하면 CLI를 매우 직관적으로 사용할 수 있습니다. 여러분은 이 도구를 선택함으로써 절대 잘못될 수 없습니다. 이 도구는 안전한 배팅 입니다.`}</p>\n    <h2>{`정리`}</h2>\n    <p>{`현재 `}<inlineCode parentName=\"p\">{`Lerna`}</inlineCode>{` 프로젝트는 Nx와 거의 같은 다운로드 수를 가지고 있으며 터보레포와 러쉬를 합친 것보다 더 많습니다. 유지보수가 부족하다는 인식이 확산됨에 따라 이 트렌드는 바뀔 것 입니다.`}</p>\n    <p>{`비록 꽤 새롭지만, 터보레포는 지금까지 내가 가장 좋아하는 것 중 하나가 되었습니다. 이 도구는 모든 체크박스를 충족하는 것처럼 보입니다. 추천을 드리자면 두 말할 것도 없이 `}<inlineCode parentName=\"p\">{`Nx`}</inlineCode>{`입니다. Nx는 성숙하고, 빠르고, 신뢰할 수 있습니다.`}</p>\n    <p>{`감사합니다.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["Utterances","commentsEl","createRef","useState","status","setStatus","useEffect","scriptEl","document","createElement","onload","onerror","async","src","setAttribute","current","appendChild","className","ref","memo","Layout","children","pageContext","frontmatter","title","description","keywords","url","image","date","id","Helmet","name","content","property","rel","href","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"sourceRoot":""}
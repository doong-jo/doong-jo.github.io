{"version":3,"file":"component---src-pages-posts-long-live-monorepos-mdx-c47f3a7269c4104404ea.js","mappings":"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","sources":["webpack://blog/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://blog/./node_modules/@mdx-js/react/lib/index.js","webpack://blog/./src/pages/posts/long-live-monorepos.mdx"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _defineProperty from \"/Users/sungdong.jo/repos/blog/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\nimport React from 'react';\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\n\nexport var MDXContext = React.createContext({});\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\n\nexport function withMDXComponents(Component) {\n  return boundMDXComponent;\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n\n  function boundMDXComponent(props) {\n    var allComponents = useMDXComponents(props.components);\n    return React.createElement(Component, _objectSpread(_objectSpread({}, props), {}, {\n      allComponents: allComponents\n    }));\n  }\n}\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\n\nexport function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext); // Memoize to avoid unnecessary top-level context changes\n\n  return React.useMemo(function () {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents);\n    }\n\n    return _objectSpread(_objectSpread({}, contextComponents), components);\n  }, [contextComponents, components]);\n}\n/** @type {Components} */\n\nvar emptyObject = {};\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\n\nexport function MDXProvider(_ref) {\n  var components = _ref.components,\n      children = _ref.children,\n      disableParentContext = _ref.disableParentContext;\n  var allComponents = useMDXComponents(components);\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject;\n  }\n\n  return React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, children);\n}","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    blockquote: \"blockquote\",\n    p: \"p\",\n    img: \"img\",\n    code: \"code\",\n    a: \"a\",\n    strong: \"strong\",\n    h2: \"h2\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Lerna는 공식적으로 죽었다. 모노레포여 영원하길\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"원문: https://betterprogramming.pub/lerna-is-officially-dead-long-live-monorepos-9853c80a7b0e\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"4가지 도구를 사용하여 JavaScript 모노레포를 효율적으로 관리할 수 있습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"https://miro.medium.com/max/1400/1*HOIXYzC17oKEWc5p4gMIwg.png\",\n    alt: \"image1.png\"\n  })), \"\\n\", React.createElement(_components.p, null, \"모노레포 방식은 모든 종속성을 관리하는 좋은 방법입니다. 그리고 이는 몇 년 동안 뜨거운 주제였습니다. 모노레포는 잘 정의된 관계를 통해 개별 프로젝트를 유지할 수 있는 좋은 방법입니다. 즉각적인 이점 중 하나는 \", React.createElement(_components.code, null, \"ESLint\"), \", \", React.createElement(_components.code, null, \"Prettier\"), \", \", React.createElement(_components.code, null, \"TypeScript\"), \" 등과 같은 구성을 서로 다른 프로젝트에서 공유하여 일관성을 보장할 수 있다는 점입니다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"npm\"), \", \", React.createElement(_components.code, null, \"yarn\"), \" 및 \", React.createElement(_components.code, null, \"pnpm\"), \"과 같은 도구는 모노레포를 자체적으로 지원합니다. 그러나 몇가지 필요한 기능을 지원하지 않아 아쉬움이 있었습니다. 이러한 부족함을 \", React.createElement(_components.code, null, \"Lerna\"), \"에서는 지원했습니다. \", React.createElement(_components.code, null, \"Lerna\"), \"의 목표는 패키지를 빌드, 조정 및 배포할 수 있도록 확장성을 향상시키는 것이었습니다.\"), \"\\n\", React.createElement(_components.p, null, \"Lerna는 최근에 공식적으로 수명이 다했습니다. 비록 메인테이너였던 \", React.createElement(_components.code, null, \"@evocateur\"), \"가 그의 번아웃과 함께 프로젝트를 포기하려는 의도를 밝혔지만, 그것은 2020년 4월까지 공식화되지 않았었습니다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"중요한 참고: 이 프로젝트는 현재 \", React.createElement(_components.a, {\n    href: \"https://github.com/lerna/lerna/issues/2703\"\n  }, \"활발 유지 관리되지 않습니다\"), \". 모노레포 관리를 위한 대체 도구 채택을 고려하십시오. — Lerna의 Readme.md에 명시된 내용입니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이 프로젝트는 매일 \", React.createElement(_components.code, null, \"130만\"), \" 건 이상의 다운로드가 지속적으로 발생하고 있지만 다른 곳에 이관되지 않을 것입니다. 왜 그럴까요? 제작자는 그것을 수정하기보다는 다시 만들기를 열망할 것입니다. 최신 툴링의 성능과 경쟁할 수 없었습니다. 비록 많은 사람들이 여전히 \", React.createElement(_components.code, null, \"Lerna\"), \"를 사랑하고 즐긴다고 해도, 이제는 나아가야 할 때입니다.\"), \"\\n\", React.createElement(_components.p, null, \"그렇다면 JavaScript/TypeScript 모노레포 에코시스템을 구축할 때 우리가 선택할 수 있는 것은 무엇일까요? 이 글에서는 가장 인기 있는 도구를 알아보려고 합니다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"업데이트\"), \": 이 글이 게시된 후 내용이 뒤바뀌었습니다. Lerna의 제작자가 프로젝트를 \", React.createElement(_components.strong, null, \"Nrwl\"), \" 🚀🚀에게 넘기기로 결정했습니다. 그들의 로드맵은 여전히 공개되어야 할 것입니다. 지난 한 해 동안 Lerna가 비활성화되어 뒤쳐지게되었습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"1. Yarn, Npm, and Pnpm\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"https://miro.medium.com/max/1400/1*KgmML7r4OsnNdDikiVfiBg.png\",\n    alt: \"image2.png\"\n  })), \"\\n\", React.createElement(_components.p, null, \"앞서 언급했듯이 \", React.createElement(_components.code, null, \"npm\"), \", \", React.createElement(_components.code, null, \"yarn\"), \", \", React.createElement(_components.code, null, \"pnpm\"), \"은 이미 자체적으로 모노레포 지원으로 출하되고 있습니다. 그렇다면 \\\"Lerna\\\"나 다른 도구가 정말 필요한 지 자문해 볼 필요가 있습니다. 여러분의 모노레포는 그렇게 복잡합니까?\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"yarn\"), \"은 모노레포 기능 지원에 있어서 선구자였고, \", React.createElement(_components.code, null, \"npm\"), \"은 2020년 10월 출시된 버전 7부터 지원하고 있습니다. \", React.createElement(_components.code, null, \"npm\"), \". \", React.createElement(_components.code, null, \"yarn\"), \", \", React.createElement(_components.code, null, \"pnpm\"), \" 세 가지 패키지 매니저 사이에는 많은 유사점이 있습니다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"pnpm\"), \"에서 작업 영역 구성은 \", React.createElement(_components.code, null, \"pnpm-workspace.yaml\"), \"에 있고 \", React.createElement(_components.code, null, \"yarn\"), \" 및 \", React.createElement(_components.code, null, \"npm\"), \"에서는 루트 \", React.createElement(_components.code, null, \"package.json\"), \"에 있습니다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"npm\"), \"에서 작업영역(workspaces)을 사용한 모노레포 설정 예제입니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"// /.package.json\\n{\\n  // ...\\n  \\\"workspaces\\\": [\\\"./packages/*\\\"]\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"테스트와 같은 명령을 실행하려면 npm의 \", React.createElement(_components.code, null, \"--workspaces\"), \"와 \", React.createElement(_components.code, null, \"pnpm\"), \"의 \", React.createElement(_components.code, null, \"-r\"), \" 또는 \", React.createElement(_components.code, null, \"recursive\"), \"를 사용할 수 있습니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"# 모든 워크스페이스를 새롭게 정리합니다.\\npnpm -r exec -- rm -rf node_modules && rm pnpm-lock.yaml\\n#  @doppelmutzi 범위의 모든 작업영역에서 모든 테스트를 수행합니다.\\npnpm recursive run test --filter @doppelmutzi/\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"yarn\"), \"의 한 가지 특징은 \", React.createElement(_components.code, null, \"workspace:\"), \" 참조를 동적으로 대체하여 종속성 프로세스를 단순화할 수 있다는 것입니다. 이는 매우 편리합니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"{\\n  \\\"dependencies\\\": {\\n    \\\"star\\\": \\\"workspace:*\\\",\\n    \\\"caret\\\": \\\"workspace:^\\\",\\n    \\\"tilde\\\": \\\"workspace:~\\\",\\n    \\\"range\\\": \\\"workspace:^1.2.3\\\",\\n    \\\"path\\\": \\\"workspace:path/to/baz\\\"\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"이 세 가지 중에서 어떤 것이 가장 좋을까요? 비록 \", React.createElement(_components.code, null, \"npm\"), \"이 빠르게 따라잡고 있지만 좀 더 성숙한 특징을 가지고 있는 \", React.createElement(_components.code, null, \"yarn\"), \"을 뽑을 것 같습니다. \", React.createElement(_components.code, null, \"pnpm\"), \"은 디스크를 사용함으로써 얻는 효율성과 같은 다른 이점도 있지만, 이는 \", React.createElement(_components.code, null, \"yarn berry\"), \"에서도 지원하고 있습니다.\"), \"\\n\", React.createElement(_components.p, null, \"이 세 가지 중 어떤 것을 언제 사용해야 할까요? 모두 상대적으로 규모가 작은 프로젝트에서 사용하는 것이 좋습니다. 왜냐하면 프로젝트 오케스트레이션 측면에서 이점은 없기 때문입니다. 복잡한 종속성 그래프 또는 릴리스가 필요한 경우 다른 도구를 선택하는 것이 좋습니다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"(역주) \", React.createElement(_components.a, {\n    href: \"https://www.redhat.com/ko/topics/automation/what-is-orchestration\"\n  }, \"오케스트레이션\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"2. 러쉬(Rush) 스택\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"https://miro.medium.com/max/1400/1*D_agf6wVxCgNv4O_Sp6MWQ.png\",\n    alt: \"image3.png\"\n  })), \"\\n\", React.createElement(_components.p, null, \"러쉬는 마이크로소프트가 JavaScript/TypeScript 프로젝트를 위한 모노레포 관리를 해결하기 위해 만든 도구입니다. 내부 관리 도구로써 만들어졌고 발전해왔습니다.\"), \"\\n\", React.createElement(_components.p, null, \"이 도구의 가장 좋은 특징은 무엇일까요?\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"자동 로컬 연결(linking)\"), \"\\n\", React.createElement(_components.li, null, \"빠른 빌드\"), \"\\n\", React.createElement(_components.li, null, \"부분 또는 증분 빌드\"), \"\\n\", React.createElement(_components.li, null, \"순환 종속성\"), \"\\n\", React.createElement(_components.li, null, \"대량 발행\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"설치 및 시작은 매우 간단합니다. 설치 방법은 다음과 같습니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"npm install -g @microsoft/rush\\n\")), \"\\n\", React.createElement(_components.p, null, \"이 도구는 응용 프로그램을 가장 잘 구성하는 방법에 대한 상당한 수준의 제어 기능을 제공합니다. 이건 단지 저의 의견이 아니며 빌드 및 릴리스 오케스트레이터로 볼 수 있습니다. 3개의 상위 패키지 매니저들(\", React.createElement(_components.code, null, \"yarn\"), \", \", React.createElement(_components.code, null, \"pnpm\"), \", 또는 \", React.createElement(_components.code, null, \"npm\"), \") 가운데 어떤 것이라도 그 위에 구축할 수 있습니다. 이 세 가지 중에서는 \", React.createElement(_components.code, null, \"npm\"), \"과 가장 호환성이 좋습니다. 유일한 주의 사항은 꽤 오래된 버전인 4.5.0과 함께 사용할 것을 제안한다는 것입니다.\"), \"\\n\", React.createElement(_components.p, null, \"어떻게 작동할까요? 이 모든 것은 \", React.createElement(_components.code, null, \"rush.json\"), \" 파일을 통해 구성됩니다. \", React.createElement(_components.code, null, \"pnpm\"), \" 도구를 사용하는 예를 보겠습니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// rush.json\\n/**\\n  * 다음 필드는 패키지 매니저가 어떤 버전으로 설치되어야하는지 나타냅니다.\\n  * 러쉬는 여러분의 빌드 과정을 보장하기 위해 패키지 관리자의 로컬 복사본을 설치합니다.\\n  * 이 내용은 로컬 환경의 모든 도구로부터 완전히 독립적입니다.\\n  *\\n  *\\n  * \\\"pnpmVersion\\\", \\\"npmVersion\\\", or \\\"yarnVersion\\\" 중 하나를 사용할 때의 명세입니다. 더 자세한 대안들에 대한 내용은 러쉬의 문서를 참고해주세요.\\n  */\\n\\\"pnpmVersion\\\": \\\"2.15.1\\\",\\n\\n// \\\"npmVersion\\\": \\\"4.5.0\\\",\\n// \\\"yarnVersion\\\": \\\"1.9.4\\\",\\n\")), \"\\n\", React.createElement(_components.p, null, \"이 파일에서 프로젝트의 종속성이 어떻게 구성되는지 살펴보겠습니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"\\\"projects\\\": [\\n    {\\n      \\\"packageName\\\": \\\"my-toolchain\\\",\\n      \\\"projectFolder\\\": \\\"tools/my-toolchain\\\"\\n    }\\n  ]\\n\")), \"\\n\", React.createElement(_components.p, null, \"여전히 다른 툴링과 상당히 일치합니다. 러쉬의 툴링은 프로젝트 \", React.createElement(_components.code, null, \"npm\"), \" 종속성을 세부적으로 제어하고자 하는 대규모 조직에 적합합니다.\"), \"\\n\", React.createElement(_components.h2, null, \"3. 터보레포(Turborepo)\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"https://miro.medium.com/max/1400/1*BZZWr6mmjPV7r57JzFtw_w.png\",\n    alt: \"image4.png\"\n  })), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"이미지 출처: https://github.com/vercel/turborepo\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Vercel은 최근 터보레포 회사를 인수하여 똑똑한 모노레포 도구를 선점했습니다. 터보레포는 \", React.createElement(_components.code, null, \"Formik\"), \"를 만든 사람이 참여했고 Go 언어를 사용하여 만들어졌습니다. 특히 병렬 실행에서 탁월한 성능을 발휘합니다.\"), \"\\n\", React.createElement(_components.p, null, \"가장 좋은 특징은 무엇일까요?\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"컴퓨팅 및 원격 캐싱\"), \"\\n\", React.createElement(_components.li, null, \"병렬 태스크 실행\"), \"\\n\", React.createElement(_components.li, null, \"사용 및 구성이 용이함\"), \"\\n\", React.createElement(_components.li, null, \"종속성 시각화\"), \"\\n\", React.createElement(_components.li, null, \"변경 사항이 지속적으로 통합됨\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"시작하기 전에 다음을 실행하여 터미널 설정 마법사를 트리거할 수 있습니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// 실행\\nnpx create-turbo@latest my-turbo-repo\\n\")), \"\\n\", React.createElement(_components.p, null, \"러쉬와 마찬가지로 터보레포도 패키지 관리자를 선택해야 합니다. npm, pnpm 및 yarn 옵션을 사용할 수 있습니다. 이미 기본 작업 영역들(workspace)을 사용하고 있다면 이 도구와 잘 통합되므로 쉽게 전환할 수 있습니다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"\\\"*\\\"\"), \" 표기법을 사용하여 패키지 종속성을 관리하는 방법에 주목해주세요. 이렇게 하면 앱이 최신 버전으로 유지됩니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"\\\"dependencies\\\": {\\n  \\\"next\\\": \\\"12.0.8\\\",\\n  \\\"react\\\": \\\"17.0.2\\\",\\n  \\\"react-dom\\\": \\\"17.0.2\\\",\\n  \\\"ui\\\": \\\"*\\\"\\n},\\n\")), \"\\n\", React.createElement(_components.p, null, \"우리는 turbo.json을 통해 빌드 파이프라인을 만들 수 있습니다. 프로젝트가 어떻게 만들어지는지 정의하는 곳입니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"{\\n  \\\"pipeline\\\": {\\n    \\\"build\\\": {\\n      \\\"dependsOn\\\": [\\\"^build\\\"],\\n      \\\"outputs\\\": [\\\"dist/**\\\", \\\".next/**\\\"]\\n    },\\n    \\\"lint\\\": {\\n      \\\"outputs\\\": []\\n    },\\n    \\\"dev\\\": {\\n      \\\"cache\\\": false\\n    }\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"이 도구는 빌딩 프로세스를 심층적으로 구성하고자 하는 독립적인 모노레포를 원하는 경우 유용합니다.\"), \"\\n\", React.createElement(_components.p, null, \"유망하지만 \", React.createElement(_components.code, null, \"Nx\"), \"와 같은 성숙한 툴링을 따라잡으려면 아직 갈 길이 멉니다. \", React.createElement(_components.code, null, \"Vercel\"), \"과 함께라면 큰 발전을 이룰 것으로 보입니다. 이 도구는 미래를 위한 배팅일 것입니다.\"), \"\\n\", React.createElement(_components.h2, null, \"4. NX\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"https://miro.medium.com/max/1400/0*ZjdRqOwAUAQEcsNe.png\",\n    alt: \"image5.png\"\n  })), \"\\n\", React.createElement(_components.p, null, \"Nx는 Nrwl 팀에 의해 만들어졌습니다. 몇 년 동안이나 이용 가능했지만 최근에 매우 인기가 많아졌습니다. TypeScript를 사용하여 빌드됩니다만 이것에 속지 마세요. 성능이 정말 뛰어납니다. \", React.createElement(_components.code, null, \"C++\"), \"로 작성된 모듈과 코어 \", React.createElement(_components.code, null, \"Node.js\"), \"에 의해 많은 계산이 수행됩니다.\"), \"\\n\", React.createElement(_components.p, null, \"이 도구의 철학은 프로젝트가 특정한 구조를 가져야 한다는 것입니다. 그들은 전체 구조를 건조하고, 다용도적이며, 플러그가 가능한 상태로 유지하기 위해 비트 플러그인 생태계를 만들었습니다. Nx는 확장 가능하고, 빠르고, 똑똑한 빌드 시스템입니다.\"), \"\\n\", React.createElement(_components.p, null, \"가장 좋은 특징은 무엇일까요?\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"스마트 리빌드. 변경 사항의 영향을 받는 내용만 다시 빌드하고 다시 테스트합니다.\"), \"\\n\", React.createElement(_components.li, null, \"프로젝트 그래프\"), \"\\n\", React.createElement(_components.li, null, \"분산 태스크 실행\"), \"\\n\", React.createElement(_components.li, null, \"컴퓨팅 및 원격 캐싱\"), \"\\n\", React.createElement(_components.li, null, \"개발자 경험\"), \"\\n\", React.createElement(_components.li, null, \"소유권 관리\"), \"\\n\", React.createElement(_components.li, null, \"발전기\"), \"\\n\", React.createElement(_components.li, null, \"플러그인 생태계\"), \"\\n\", React.createElement(_components.li, null, \"CL/V 코드 확장\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"마이그레이션은 간단합니다. 먼저 명령을 실행하여 Nx를 추가합니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// 실행\\nnpx add-nx-to-monorepo\\n\")), \"\\n\", React.createElement(_components.p, null, \"위 내용은 무엇을 하는걸까요?\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"package.json에 Nx를 추가합니다.\"), \"\\n\", React.createElement(_components.li, null, \"필요한 구성을 모두 포함하는 nx.json을 생성합니다.\"), \"\\n\", React.createElement(_components.li, null, \"무료이며 인증이 필요하지 않은 Nx Cloud를 설정합니다(\\\"예\\\"를 선택한 경우).\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"다음 단계는 아래와 같습니다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"플러그인 사용\"), \"\\n\", React.createElement(_components.li, null, \"플러그인에 활용되는 중복 구성 삭제\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Nx는 견고하고 성능이 뛰어납니다. 그것은 \", React.createElement(_components.code, null, \"터보레포\"), \"와 \", React.createElement(_components.code, null, \"러쉬\"), \"보다 더 성숙합니다. 훌륭한 커뮤니티 지원과 더 많은 리소스들이 있습니다. VSCode 플러그인을 사용하면 CLI를 매우 직관적으로 사용할 수 있습니다. 여러분은 이 도구를 선택함으로써 절대 잘못될 수 없습니다. 이 도구는 안전한 배팅 입니다.\"), \"\\n\", React.createElement(_components.h2, null, \"정리\"), \"\\n\", React.createElement(_components.p, null, \"현재 \", React.createElement(_components.code, null, \"Lerna\"), \" 프로젝트는 Nx와 거의 같은 다운로드 수를 가지고 있으며 터보레포와 러쉬를 합친 것보다 더 많습니다. 유지보수가 부족하다는 인식이 확산됨에 따라 이 트렌드는 바뀔 것 입니다.\"), \"\\n\", React.createElement(_components.p, null, \"비록 꽤 새롭지만, 터보레포는 지금까지 내가 가장 좋아하는 것 중 하나가 되었습니다. 이 도구는 모든 체크박스를 충족하는 것처럼 보입니다. 추천을 드리자면 두 말할 것도 없이 \", React.createElement(_components.code, null, \"Nx\"), \"입니다. \", React.createElement(_components.code, null, \"Nx\"), \"는 성숙하고, 빠르고, 신뢰할 수 있습니다.\"), \"\\n\", React.createElement(_components.p, null, \"감사합니다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MDXContext","useMDXComponents","components","contextComponents","_createMdxContent","props","_components","assign","h1","blockquote","p","img","code","a","strong","h2","pre","ul","li","_provideComponents","React","src","alt","href","className","MDXLayout","wrapper"],"sourceRoot":""}